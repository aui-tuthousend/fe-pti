/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as DemoErrorsRouteImport } from './routes/demo/errors'
import { Route as AuthRegisterRouteImport } from './routes/auth/Register'
import { Route as AuthLoginRouteImport } from './routes/auth/Login'
import { Route as UserHomeIndexRouteImport } from './routes/user/Home/index'
import { Route as UserCheckoutIndexRouteImport } from './routes/user/Checkout/index'
import { Route as UserCatalogIndexRouteImport } from './routes/user/Catalog/index'
import { Route as UserCartIndexRouteImport } from './routes/user/Cart/index'
import { Route as DemoStartServerFuncsRouteImport } from './routes/demo/start.server-funcs'
import { Route as DemoStartApiRequestRouteImport } from './routes/demo/start.api-request'
import { Route as DemoApiNamesRouteImport } from './routes/demo/api.names'
import { Route as DemoStartSsrIndexRouteImport } from './routes/demo/start.ssr.index'
import { Route as DemoStartSsrSpaModeRouteImport } from './routes/demo/start.ssr.spa-mode'
import { Route as DemoStartSsrFullSsrRouteImport } from './routes/demo/start.ssr.full-ssr'
import { Route as DemoStartSsrDataOnlyRouteImport } from './routes/demo/start.ssr.data-only'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoErrorsRoute = DemoErrorsRouteImport.update({
  id: '/demo/errors',
  path: '/demo/errors',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRegisterRoute = AuthRegisterRouteImport.update({
  id: '/auth/Register',
  path: '/auth/Register',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/auth/Login',
  path: '/auth/Login',
  getParentRoute: () => rootRouteImport,
} as any)
const UserHomeIndexRoute = UserHomeIndexRouteImport.update({
  id: '/user/Home/',
  path: '/user/Home/',
  getParentRoute: () => rootRouteImport,
} as any)
const UserCheckoutIndexRoute = UserCheckoutIndexRouteImport.update({
  id: '/user/Checkout/',
  path: '/user/Checkout/',
  getParentRoute: () => rootRouteImport,
} as any)
const UserCatalogIndexRoute = UserCatalogIndexRouteImport.update({
  id: '/user/Catalog/',
  path: '/user/Catalog/',
  getParentRoute: () => rootRouteImport,
} as any)
const UserCartIndexRoute = UserCartIndexRouteImport.update({
  id: '/user/Cart/',
  path: '/user/Cart/',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStartServerFuncsRoute = DemoStartServerFuncsRouteImport.update({
  id: '/demo/start/server-funcs',
  path: '/demo/start/server-funcs',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStartApiRequestRoute = DemoStartApiRequestRouteImport.update({
  id: '/demo/start/api-request',
  path: '/demo/start/api-request',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoApiNamesRoute = DemoApiNamesRouteImport.update({
  id: '/demo/api/names',
  path: '/demo/api/names',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStartSsrIndexRoute = DemoStartSsrIndexRouteImport.update({
  id: '/demo/start/ssr/',
  path: '/demo/start/ssr/',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStartSsrSpaModeRoute = DemoStartSsrSpaModeRouteImport.update({
  id: '/demo/start/ssr/spa-mode',
  path: '/demo/start/ssr/spa-mode',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStartSsrFullSsrRoute = DemoStartSsrFullSsrRouteImport.update({
  id: '/demo/start/ssr/full-ssr',
  path: '/demo/start/ssr/full-ssr',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStartSsrDataOnlyRoute = DemoStartSsrDataOnlyRouteImport.update({
  id: '/demo/start/ssr/data-only',
  path: '/demo/start/ssr/data-only',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth/Login': typeof AuthLoginRoute
  '/auth/Register': typeof AuthRegisterRoute
  '/demo/errors': typeof DemoErrorsRoute
  '/demo/api/names': typeof DemoApiNamesRoute
  '/demo/start/api-request': typeof DemoStartApiRequestRoute
  '/demo/start/server-funcs': typeof DemoStartServerFuncsRoute
  '/user/Cart': typeof UserCartIndexRoute
  '/user/Catalog': typeof UserCatalogIndexRoute
  '/user/Checkout': typeof UserCheckoutIndexRoute
  '/user/Home': typeof UserHomeIndexRoute
  '/demo/start/ssr/data-only': typeof DemoStartSsrDataOnlyRoute
  '/demo/start/ssr/full-ssr': typeof DemoStartSsrFullSsrRoute
  '/demo/start/ssr/spa-mode': typeof DemoStartSsrSpaModeRoute
  '/demo/start/ssr': typeof DemoStartSsrIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth/Login': typeof AuthLoginRoute
  '/auth/Register': typeof AuthRegisterRoute
  '/demo/errors': typeof DemoErrorsRoute
  '/demo/api/names': typeof DemoApiNamesRoute
  '/demo/start/api-request': typeof DemoStartApiRequestRoute
  '/demo/start/server-funcs': typeof DemoStartServerFuncsRoute
  '/user/Cart': typeof UserCartIndexRoute
  '/user/Catalog': typeof UserCatalogIndexRoute
  '/user/Checkout': typeof UserCheckoutIndexRoute
  '/user/Home': typeof UserHomeIndexRoute
  '/demo/start/ssr/data-only': typeof DemoStartSsrDataOnlyRoute
  '/demo/start/ssr/full-ssr': typeof DemoStartSsrFullSsrRoute
  '/demo/start/ssr/spa-mode': typeof DemoStartSsrSpaModeRoute
  '/demo/start/ssr': typeof DemoStartSsrIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/auth/Login': typeof AuthLoginRoute
  '/auth/Register': typeof AuthRegisterRoute
  '/demo/errors': typeof DemoErrorsRoute
  '/demo/api/names': typeof DemoApiNamesRoute
  '/demo/start/api-request': typeof DemoStartApiRequestRoute
  '/demo/start/server-funcs': typeof DemoStartServerFuncsRoute
  '/user/Cart/': typeof UserCartIndexRoute
  '/user/Catalog/': typeof UserCatalogIndexRoute
  '/user/Checkout/': typeof UserCheckoutIndexRoute
  '/user/Home/': typeof UserHomeIndexRoute
  '/demo/start/ssr/data-only': typeof DemoStartSsrDataOnlyRoute
  '/demo/start/ssr/full-ssr': typeof DemoStartSsrFullSsrRoute
  '/demo/start/ssr/spa-mode': typeof DemoStartSsrSpaModeRoute
  '/demo/start/ssr/': typeof DemoStartSsrIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth/Login'
    | '/auth/Register'
    | '/demo/errors'
    | '/demo/api/names'
    | '/demo/start/api-request'
    | '/demo/start/server-funcs'
    | '/user/Cart'
    | '/user/Catalog'
    | '/user/Checkout'
    | '/user/Home'
    | '/demo/start/ssr/data-only'
    | '/demo/start/ssr/full-ssr'
    | '/demo/start/ssr/spa-mode'
    | '/demo/start/ssr'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth/Login'
    | '/auth/Register'
    | '/demo/errors'
    | '/demo/api/names'
    | '/demo/start/api-request'
    | '/demo/start/server-funcs'
    | '/user/Cart'
    | '/user/Catalog'
    | '/user/Checkout'
    | '/user/Home'
    | '/demo/start/ssr/data-only'
    | '/demo/start/ssr/full-ssr'
    | '/demo/start/ssr/spa-mode'
    | '/demo/start/ssr'
  id:
    | '__root__'
    | '/'
    | '/auth/Login'
    | '/auth/Register'
    | '/demo/errors'
    | '/demo/api/names'
    | '/demo/start/api-request'
    | '/demo/start/server-funcs'
    | '/user/Cart/'
    | '/user/Catalog/'
    | '/user/Checkout/'
    | '/user/Home/'
    | '/demo/start/ssr/data-only'
    | '/demo/start/ssr/full-ssr'
    | '/demo/start/ssr/spa-mode'
    | '/demo/start/ssr/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthRegisterRoute: typeof AuthRegisterRoute
  DemoErrorsRoute: typeof DemoErrorsRoute
  DemoApiNamesRoute: typeof DemoApiNamesRoute
  DemoStartApiRequestRoute: typeof DemoStartApiRequestRoute
  DemoStartServerFuncsRoute: typeof DemoStartServerFuncsRoute
  UserCartIndexRoute: typeof UserCartIndexRoute
  UserCatalogIndexRoute: typeof UserCatalogIndexRoute
  UserCheckoutIndexRoute: typeof UserCheckoutIndexRoute
  UserHomeIndexRoute: typeof UserHomeIndexRoute
  DemoStartSsrDataOnlyRoute: typeof DemoStartSsrDataOnlyRoute
  DemoStartSsrFullSsrRoute: typeof DemoStartSsrFullSsrRoute
  DemoStartSsrSpaModeRoute: typeof DemoStartSsrSpaModeRoute
  DemoStartSsrIndexRoute: typeof DemoStartSsrIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/errors': {
      id: '/demo/errors'
      path: '/demo/errors'
      fullPath: '/demo/errors'
      preLoaderRoute: typeof DemoErrorsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/Register': {
      id: '/auth/Register'
      path: '/auth/Register'
      fullPath: '/auth/Register'
      preLoaderRoute: typeof AuthRegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/Login': {
      id: '/auth/Login'
      path: '/auth/Login'
      fullPath: '/auth/Login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/user/Home/': {
      id: '/user/Home/'
      path: '/user/Home'
      fullPath: '/user/Home'
      preLoaderRoute: typeof UserHomeIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/user/Checkout/': {
      id: '/user/Checkout/'
      path: '/user/Checkout'
      fullPath: '/user/Checkout'
      preLoaderRoute: typeof UserCheckoutIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/user/Catalog/': {
      id: '/user/Catalog/'
      path: '/user/Catalog'
      fullPath: '/user/Catalog'
      preLoaderRoute: typeof UserCatalogIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/user/Cart/': {
      id: '/user/Cart/'
      path: '/user/Cart'
      fullPath: '/user/Cart'
      preLoaderRoute: typeof UserCartIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/start/server-funcs': {
      id: '/demo/start/server-funcs'
      path: '/demo/start/server-funcs'
      fullPath: '/demo/start/server-funcs'
      preLoaderRoute: typeof DemoStartServerFuncsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/start/api-request': {
      id: '/demo/start/api-request'
      path: '/demo/start/api-request'
      fullPath: '/demo/start/api-request'
      preLoaderRoute: typeof DemoStartApiRequestRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/api/names': {
      id: '/demo/api/names'
      path: '/demo/api/names'
      fullPath: '/demo/api/names'
      preLoaderRoute: typeof DemoApiNamesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/start/ssr/': {
      id: '/demo/start/ssr/'
      path: '/demo/start/ssr'
      fullPath: '/demo/start/ssr'
      preLoaderRoute: typeof DemoStartSsrIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/start/ssr/spa-mode': {
      id: '/demo/start/ssr/spa-mode'
      path: '/demo/start/ssr/spa-mode'
      fullPath: '/demo/start/ssr/spa-mode'
      preLoaderRoute: typeof DemoStartSsrSpaModeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/start/ssr/full-ssr': {
      id: '/demo/start/ssr/full-ssr'
      path: '/demo/start/ssr/full-ssr'
      fullPath: '/demo/start/ssr/full-ssr'
      preLoaderRoute: typeof DemoStartSsrFullSsrRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/start/ssr/data-only': {
      id: '/demo/start/ssr/data-only'
      path: '/demo/start/ssr/data-only'
      fullPath: '/demo/start/ssr/data-only'
      preLoaderRoute: typeof DemoStartSsrDataOnlyRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthRegisterRoute: AuthRegisterRoute,
  DemoErrorsRoute: DemoErrorsRoute,
  DemoApiNamesRoute: DemoApiNamesRoute,
  DemoStartApiRequestRoute: DemoStartApiRequestRoute,
  DemoStartServerFuncsRoute: DemoStartServerFuncsRoute,
  UserCartIndexRoute: UserCartIndexRoute,
  UserCatalogIndexRoute: UserCatalogIndexRoute,
  UserCheckoutIndexRoute: UserCheckoutIndexRoute,
  UserHomeIndexRoute: UserHomeIndexRoute,
  DemoStartSsrDataOnlyRoute: DemoStartSsrDataOnlyRoute,
  DemoStartSsrFullSsrRoute: DemoStartSsrFullSsrRoute,
  DemoStartSsrSpaModeRoute: DemoStartSsrSpaModeRoute,
  DemoStartSsrIndexRoute: DemoStartSsrIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

import type { getRouter } from './router.tsx'
import type { createStart } from '@tanstack/react-start'
declare module '@tanstack/react-start' {
  interface Register {
    ssr: true
    router: Awaited<ReturnType<typeof getRouter>>
  }
}
